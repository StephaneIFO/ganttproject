name: Build Packages

on:
    push:
        branches: ['master', 'BRANCH*']
        paths: ['ganttproject-builder/VERSION', '.github/workflows/build-packages.yml']
env:
    BUILD_NUMBER: 3295
    VERSION: 3.3.3295
    WINDOWS_APP_FOLDER_NAME: GanttProject-3.3-Beta-II
    MAC_APP_NAME: GanttProject 3.3 Beta II
    MACOS_CERTIFICATE: ${{ secrets.PROD_MACOS_CERTIFICATE }}
    MACOS_CERTIFICATE_PWD: ${{ secrets.PROD_MACOS_CERTIFICATE_PWD }}
    MACOS_CERTIFICATE_NAME: ${{ secrets.PROD_MACOS_CERTIFICATE_NAME }}
    MACOS_CI_KEYCHAIN_PWD: ${{ secrets.PROD_MACOS_CI_KEYCHAIN_PWD }}

jobs:
#    Linux:
#        runs-on: ubuntu-latest
#        steps:
#            - uses: actions/checkout@v3
#            - name: Checkout submodules
#              shell: bash
#              run: |
#                  git submodule sync --recursive
#                  git submodule update --init --force --recursive --depth=1
#                  echo "$VERSION" > ganttproject-builder/VERSION
#            - uses: actions/setup-java@v3
#              with:
#                  distribution: 'liberica'
#                  java-version: 17.0.7
#                  java-package: jdk+fx
#                  cache: 'gradle'
#            - name: Build GanttProject
#              run: |
#                  ./gradlew distbin distzip
#                  ./gradlew -PwithJavafx distdeb
#                  echo "===== PLUGINS ====="
#                  ls ganttproject-builder/dist-bin/plugins/base
#                  echo "===== DISTRIBUTIONS ====="
#                  ls build/distributions
#
#            - id: 'auth'
#              uses: 'google-github-actions/auth@v1'
#              with:
#                  credentials_json: '${{ secrets.GCP_CREDENTIALS }}'
#
#            - name: 'Set up Cloud SDK'
#              uses: 'google-github-actions/setup-gcloud@v1'
#
#            - name: 'Use gcloud CLI'
#              run: 'gcloud info'
#
#            - name: Upload Packages
#              run: |
#                  #!/bin/sh
#                  cd build/distributions
#                  for f in *; do
#                    gsutil cp $f gs://dl.ganttproject.biz && gsutil acl ch -u AllUsers:R gs://dl.ganttproject.biz/$f;
#                  done;
#
  Windows:
      runs-on: windows-latest
      steps:
          - uses: actions/checkout@v3
          - name: Checkout submodules
            shell: bash
            run: |
                git submodule sync --recursive
                git submodule update --init --force --recursive --depth=1
                echo "$VERSION" > ganttproject-builder/VERSION
          - uses: actions/setup-java@v3
            with:
                distribution: 'liberica'
                java-version: 17.0.11
                java-package: jdk+fx
                cache: 'gradle'
          - name: Build GanttProject
            run: |
                ./gradlew distbin
                echo "===== PLUGINS ====="
                ls ganttproject-builder/dist-bin/plugins/base
          - name: Build MSI installer
            run: |
                build-bin/package-win.bat

          - id: 'auth'
            uses: 'google-github-actions/auth@v1'
            with:
                credentials_json: '${{ secrets.GCP_CREDENTIALS }}'

          - name: 'Set up Cloud SDK'
            uses: 'google-github-actions/setup-gcloud@v1'

          - name: 'Use gcloud CLI'
            run: 'gcloud info'

          - name: Upload Packages
            run: |
                gsutil cp build\ganttproject-$env:VERSION.msi gs://dl.ganttproject.biz
                gsutil acl ch -u AllUsers:R gs://dl.ganttproject.biz/ganttproject-$env:VERSION.msi

          - name: Install NSIS
            run: |
                iwr -useb get.scoop.sh -outfile 'install.ps1'
                .\install.ps1 -RunAsAdmin
                scoop update
                scoop bucket add extras
                scoop install nsis
          - name: Print NSIS version
            run: makensis -VERSION
          - name: Print NSIS compile flags
            run: makensis -HDRINFO

          - name: Prepare files for NSIS
            run: |
                ./gradlew distwin
                echo "===== dist-win ====="
                ls ganttproject-builder/dist-win

          - name: Build NSIS package
            run: |
                cd ganttproject-builder\dist-win
                makensis ganttproject.nsi
                dir
                mv ganttproject-$env:VERSION.exe ..\..\build

          - name: Upload Packages
            run: |
                gsutil cp build\ganttproject-$env:VERSION.exe gs://dl.ganttproject.biz
                gsutil acl ch -u AllUsers:R gs://dl.ganttproject.biz/ganttproject-$env:VERSION.exe

